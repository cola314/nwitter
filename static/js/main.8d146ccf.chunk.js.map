{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstacne","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSolcialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createrId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","witdh","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","key","Navigation","to","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Object","assign","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d146ccf.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstacne = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        }\r\n        else if(name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={onChange}\r\n                />\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log in\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>{newAccount ? \"Sign in\" : \"Create Account\"}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstacne } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSolcialClick = async (event) => {\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new firebaseInstacne.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\") {\r\n            provider = new firebaseInstacne.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSolcialClick} name=\"google\">Continue with Google</button>\r\n                <button onClick={onSolcialClick} name=\"github\">Continue with Github</button>\r\n            </div>\r\n        </div>        \r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ( {nweetObj, isOwner} ) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        console.log(ok);\r\n        if(ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target:{value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return(\r\n        <div>\r\n            {\r\n                editing ? (\r\n                    <>\r\n                        {isOwner &&\r\n                            <>\r\n                                <form onSubmit={onSubmit}>\r\n                                    <input value={newNweet} placeholder=\"Edit your nweet\"  onChange={onChange} required />\r\n                                    <button onClick={toggleEditing}>Cancel</button>\r\n                                    <input type=\"submit\" value=\"Update Nweet\" />\r\n                                </form>\r\n                            </>\r\n                        }\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />}\r\n                        {isOwner && (\r\n                            <>\r\n                                <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                                <button onClick={toggleEditing}>Edit Nweet</button>\r\n                            </>\r\n                        )}\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst NweetFactory = ({userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text : nweet,\r\n            createdAt: Date.now(),\r\n            createrId: userObj.uid,\r\n            attachmentUrl : attachmentUrl,\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {target:{files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget : {result},} = finishedEvent;\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(null);\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind\" maxLength={120} />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} witdh=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ( {userObj} ) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((doc) =>  ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        })\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map(nweet => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.createrId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName : newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"Display name\" value={newDisplayName} onChange={onChange}/>\r\n                <input type=\"submit\" value=\"Update profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={ userObj }/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                        </Route>\r\n                    </> \r\n                ) :  (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n                </Switch>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import React , { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj(Object.assign({}, user));\n    setUserObj(user);\n  }\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}